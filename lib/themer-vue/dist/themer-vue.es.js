var e=Object.assign;import{inject as t,ref as n}from"vue";function r(e,t){if(!e)return;const n=o(t);Object.keys(n).forEach((t=>{e.style.setProperty(function(e){const t=String(e);return t.startsWith("--")?t:`--${t}`}(t),n[t])}))}function o(e,t=[],n={}){return Object.keys(e).reduce(((r,c)=>{const s=e[c],u=[...t,c];return"string"==typeof s?r[u.join("-")]=s:r=o(s,u,n),r}),n)}function c(e){return{value:e instanceof Function?e():e}}function s(t){const n=function(e){let t,n=function(){try{const e=document.querySelector(":root");return e||void 0}catch(e){return}}(),r=[];if(Array.isArray(e)){if(!e.length)throw new Error("'themes' must be filled");r=[...e]}else if(o=e,"[object Object]"===Object.prototype.toString.apply(o)){const{element:t,themes:o}=e;n&&(n=t),Array.isArray(r)&&(r=o)}var o;t=r[0];const c={element:n,themes:r,theme:t};n&&u(c,r[0]);return c}(t);return e(e({},n),{setTheme:e=>u(n,e)})}function u(t,n){if("string"==typeof n){const e=t.themes.find((e=>e.value.name===n));if(!e)return!1;n=e}const o=function(t){const{colors:n}=t.value.data;return e({},n)}(n);return!!t.element&&(r(t.element,o),t.theme.value=n.value,!0)}function i(){return t("themeManager")}function a(e){const t=s(e);t.theme=n(t.theme.value);const r=t.setTheme;return t.setTheme=e=>r.call(t,e),{manager:t,install(e){e.provide("themeManager",t),e.config.globalProperties.$themeManager=t}}}export{c as createTheme,a as createThemeManager,i as useThemeManager};
