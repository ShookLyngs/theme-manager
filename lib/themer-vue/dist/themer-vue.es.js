import{cloneDeep as e}from"lodash";import{inject as t,ref as n}from"vue";var r=Object.assign;function o(e,t=[],n={}){return Object.keys(e).reduce(((r,c)=>{const u=e[c],a=[...t,c];return"string"==typeof u?r[a.join("-")]=u:r=o(u,a,n),r}),n)}function c(e){return{value:e instanceof Function?e():e}}function u(e){const t=function(t){let n,r=function(){try{return document.querySelector(":root")||void 0}catch(e){return}}(),o=[];if(Array.isArray(t)){if(!t.length)throw new Error("'themes' must be filled");o=[...t]}else if(c=t,"[object Object]"===Object.prototype.toString.apply(c)){const{element:e,themes:n}=t;r&&(r=e),Array.isArray(o)&&(o=n)}var c;n=o[0];const u={element:r,themes:o,theme:n};return r&&a(u,o[0]),u}(e);return t.setTheme=e=>a(t,e),t}function a(t,n){if("string"==typeof n){const e=t.themes.find((e=>e.value.name===n));if(!e)return!1;n=e}const c=function(e){const{colors:t}=e.value.data;return r({},t)}(n=e(n));return!!t.element&&(function(e,t){if(!e)return;const n=o(t);Object.keys(n).forEach((t=>{e.style.setProperty(function(e){const t=String(e);return t.startsWith("--")?t:`--${t}`}(t),n[t])}))}(t.element,c),t.themeValueUpdater instanceof Function?t.themeValueUpdater(n):t.theme.value=n.value,!0)}function i(){return t("themeManager")}function s(e){const t=u(e);return t.theme=n(t.theme.value),{manager:t,install(e){e.provide("themeManager",t),e.config.globalProperties.$themeManager=t}}}export{c as createTheme,s as createThemeManager,i as useThemeManager};
