import{cloneDeep as e}from"lodash";import{inject as t,ref as r}from"vue";var n=Object.assign;function o(e){const t=String(e);return t.startsWith("--")?t:`--${t}`}function c(e,t=[],r={}){return Object.keys(e).reduce(((n,o)=>{const u=e[o],s=[...t,o];return"string"==typeof u?n[s.join("-")]=u:n=c(u,s,r),n}),r)}function u(e){return{value:e instanceof Function?e():e}}function s(e){const t=function(t){let r,n=function(){try{return document.querySelector(":root")||void 0}catch(e){return}}(),o=[];if(Array.isArray(t)){if(!t.length)throw new Error("'themes' must be filled");o=[...t]}else if(c=t,"[object Object]"===Object.prototype.toString.apply(c)){const{element:e,themes:r}=t;n&&(n=e),Array.isArray(o)&&(o=r)}var c;r=o[0];const u={element:n,themes:o,theme:r};return n&&i(u,o[0]),u}(e);return t.setTheme=e=>i(t,e),t}function i(t,r){if("string"==typeof r){const e=t.themes.find((e=>e.value.name===r));if(!e)return!1;r=e}const u=function(e){const{colors:t}=e.value.data;return n({},t)}(r=e(r));return!!t.element&&(function(e,t){if(!e)return;const r=c(t);Object.keys(r).forEach((t=>{e.style.setProperty(o(t),r[t])}))}(t.element,u),t.themeValueUpdater instanceof Function?t.themeValueUpdater(r):t.theme.value=r.value,!0)}function a(e){const t=e.themes.reduce(((e,t)=>{const r=t.value.data;return Object.keys(r).forEach((t=>{const n=function(e){const t=c(e);return Object.keys(t).reduce(((e,t)=>(e[t]=`var(${o(t)})`,e)),{})}(r[t]);Object.keys(n).forEach((r=>{e[t]||(e[t]=[]),e[t].includes(r)||e[t].push(r)}))})),e}),{});return{theme:{extend:n({},f(t))}}}function f(e){return Object.keys(e).reduce(((t,r)=>(t[r]||(t[r]={}),e[r].forEach((e=>{t[r][e]=`var(${o(e)})`})),t)),{})}function l(){return t("Themer")}function m(e){const t=s(e);return t.theme=r(t.theme.value),{manager:t,install(e){e.provide("Themer",t),e.config.globalProperties.$Themer=t}}}export{a as createTailwindPreset,u as createTheme,m as createThemer,l as useThemer};
