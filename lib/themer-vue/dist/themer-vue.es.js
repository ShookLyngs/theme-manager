import{inject as e,ref as t}from"vue";var n=Object.assign;function r(e,t=[],n={}){return Object.keys(e).reduce(((o,c)=>{const s=e[c],u=[...t,c];return"string"==typeof s?o[u.join("-")]=s:o=r(s,u,n),o}),n)}function o(e){return{value:e instanceof Function?e():e}}function c(e){const t=function(e){let t,n=function(){try{return document.querySelector(":root")||void 0}catch(e){return}}(),r=[];if(Array.isArray(e)){if(!e.length)throw new Error("'themes' must be filled");r=[...e]}else if(o=e,"[object Object]"===Object.prototype.toString.apply(o)){const{element:t,themes:o}=e;n&&(n=t),Array.isArray(r)&&(r=o)}var o;t=r[0];const c={element:n,themes:r,theme:t};return n&&s(c,r[0]),c}(e);return n(n({},t),{setTheme:e=>s(t,e)})}function s(e,t){if("string"==typeof t){const n=e.themes.find((e=>e.value.name===t));if(!n)return!1;t=n}const o=function(e){const{colors:t}=e.value.data;return n({},t)}(t);return!!e.element&&(function(e,t){if(!e)return;const n=r(t);Object.keys(n).forEach((t=>{e.style.setProperty(function(e){const t=String(e);return t.startsWith("--")?t:`--${t}`}(t),n[t])}))}(e.element,o),e.theme.value=t.value,!0)}function u(){return e("themeManager")}function i(e){const n=c(e);n.theme=t(n.theme.value);const r=n.setTheme;return n.setTheme=e=>r.call(n,e),{manager:n,install(e){e.provide("themeManager",n),e.config.globalProperties.$themeManager=n}}}export{o as createTheme,i as createThemeManager,u as useThemeManager};
