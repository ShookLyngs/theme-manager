import{cloneDeep as e}from"lodash";import{useState as t,useEffect as n}from"react";var r=Object.assign;function o(e,t=[],n={}){return Object.keys(e).reduce(((r,c)=>{const s=e[c],a=[...t,c];return"string"==typeof s?r[a.join("-")]=s:r=o(s,a,n),r}),n)}function c(e){return{value:e instanceof Function?e():e}}function s(e){const t=function(t){let n,r=function(){try{return document.querySelector(":root")||void 0}catch(e){return}}(),o=[];if(Array.isArray(t)){if(!t.length)throw new Error("'themes' must be filled");o=[...t]}else if(c=t,"[object Object]"===Object.prototype.toString.apply(c)){const{element:e,themes:n}=t;r&&(r=e),Array.isArray(o)&&(o=n)}var c;n=o[0];const s={element:r,themes:o,theme:n};return r&&a(s,o[0]),s}(e);return t.setTheme=e=>a(t,e),t}function a(t,n){if(console.log("setTheme: ",t,n),"string"==typeof n){const e=t.themes.find((e=>e.value.name===n));if(!e)return!1;n=e}const c=function(e){const{colors:t}=e.value.data;return r({},t)}(n=e(n));return!!t.element&&(function(e,t){if(!e)return;const n=o(t);Object.keys(n).forEach((t=>{e.style.setProperty(function(e){const t=String(e);return t.startsWith("--")?t:`--${t}`}(t),n[t])}))}(t.element,c),t.themeValueUpdater instanceof Function?t.themeValueUpdater(n):t.theme.value=n.value,!0)}const i=new Map;function u(r){const o=i.get(r);if(!o)throw new Error("You need to create ThemeManager before calling it.");const c=Reflect.has(o,"instance")?o.instance:o.origin,[s,a]=t(e(c.theme));return c.theme=s,c.themeValueUpdater=t=>a(e(t)),n((()=>{console.log("state updated: ",s,c)})),o.instance=c,c}function l(e){const t=`${Date.now()}`;return i.set(t,{origin:s(e)}),console.log("created ThemeManager: ",i.get(t)),t}export{c as createTheme,l as createThemeManager,u as useThemeManager};
