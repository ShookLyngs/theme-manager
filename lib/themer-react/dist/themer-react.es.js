import{cloneDeep as e}from"lodash";import{useState as t}from"react";var n=Object.assign;function r(e){const t=String(e);return t.startsWith("--")?t:`--${t}`}function o(e,t=[],n={}){return Object.keys(e).reduce(((r,c)=>{const s=e[c],i=[...t,c];return"string"==typeof s?r[i.join("-")]=s:r=o(s,i,n),r}),n)}function c(e){return{value:e instanceof Function?e():e}}function s(e){const t=function(t){let n,r=function(){try{return document.querySelector(":root")||void 0}catch(e){return}}(),o=[];if(Array.isArray(t)){if(!t.length)throw new Error("'themes' must be filled");o=[...t]}else if(c=t,"[object Object]"===Object.prototype.toString.apply(c)){const{element:e,themes:n}=t;r&&(r=e),Array.isArray(o)&&(o=n)}var c;n=o[0];const s={element:r,themes:o,theme:n};return r&&i(s,o[0]),s}(e);return t.setTheme=e=>i(t,e),t}function i(t,c){if("string"==typeof c){const e=t.themes.find((e=>e.value.name===c));if(!e)return!1;c=e}const s=function(e){const{colors:t}=e.value.data;return n({},t)}(c=e(c));return!!t.element&&(function(e,t){if(!e)return;const n=o(t);Object.keys(n).forEach((t=>{e.style.setProperty(r(t),n[t])}))}(t.element,s),t.themeValueUpdater instanceof Function?t.themeValueUpdater(c):t.theme.value=c.value,!0)}function u(e){const t=e.themes.reduce(((e,t)=>{const n=t.value.data;return Object.keys(n).forEach((t=>{const c=function(e){const t=o(e);return Object.keys(t).reduce(((e,t)=>(e[t]=`var(${r(t)})`,e)),{})}(n[t]);Object.keys(c).forEach((n=>{e[t]||(e[t]=[]),e[t].includes(n)||e[t].push(n)}))})),e}),{});return{theme:{extend:n({},a(t))}}}function a(e){return Object.keys(e).reduce(((t,n)=>(t[n]||(t[n]={}),e[n].forEach((e=>{t[n][e]=`var(${r(e)})`})),t)),{})}const f=new Map;function m(n){const r=f.get(n);if(!r)throw new Error("ThemeManager instance not exist");const o="instance"in r?r.instance:r.origin,[c,s]=t(e(o.theme));return o.theme=c,o.themeValueUpdater=t=>s(e(t)),r.instance=o,o}function h(e){const{key:t,storeItem:n}=function(e){const t=Symbol(),n={options:e,origin:s(e)};return f.set(t,n),{key:t,storeItem:n}}(e);return{key:t,origin:n.origin,useThemeManager:()=>m(t)}}export{u as createTailwindPreset,c as createTheme,h as createThemeManager,m as useThemeManager};
