import{cloneDeep as e}from"lodash";import{useState as t}from"react";var n=Object.assign;function r(e,t=[],n={}){return Object.keys(e).reduce(((o,c)=>{const i=e[c],s=[...t,c];return"string"==typeof i?o[s.join("-")]=i:o=r(i,s,n),o}),n)}function o(e){return{value:e instanceof Function?e():e}}function c(e){const t=function(t){let n,r=function(){try{return document.querySelector(":root")||void 0}catch(e){return}}(),o=[];if(Array.isArray(t)){if(!t.length)throw new Error("'themes' must be filled");o=[...t]}else if(c=t,"[object Object]"===Object.prototype.toString.apply(c)){const{element:e,themes:n}=t;r&&(r=e),Array.isArray(o)&&(o=n)}var c;n=o[0];const s={element:r,themes:o,theme:n};return r&&i(s,o[0]),s}(e);return t.setTheme=e=>i(t,e),t}function i(t,o){if("string"==typeof o){const e=t.themes.find((e=>e.value.name===o));if(!e)return!1;o=e}const c=function(e){const{colors:t}=e.value.data;return n({},t)}(o=e(o));return!!t.element&&(function(e,t){if(!e)return;const n=r(t);Object.keys(n).forEach((t=>{e.style.setProperty(function(e){const t=String(e);return t.startsWith("--")?t:`--${t}`}(t),n[t])}))}(t.element,c),t.themeValueUpdater instanceof Function?t.themeValueUpdater(o):t.theme.value=o.value,!0)}const s=new Map;function u(n){const r=s.get(n);if(!r)throw new Error("ThemeManager instance not exist");const o="instance"in r?r.instance:r.origin,[c,i]=t(e(o.theme));return o.theme=c,o.themeValueUpdater=t=>i(e(t)),r.instance=o,o}function a(e){const t=function(e){const t=Symbol();return s.set(t,{options:e,origin:c(e)}),t}(e);return{key:t,useThemeManager:()=>u(t)}}export{o as createTheme,a as createThemeManager,u as useThemeManager};
